{"version":3,"sources":["js/03-promises.js"],"names":["inputDelayEl","document","querySelector","inputStepEl","inputAmountEl","btnEl","formEl","intervalId","createPromise","position","delay","Promise","resolve","reject","Math","random","sendPromise","event","preventDefault","delayEl","Number","value","stepEl","amount","positionIndex","setTimeout","then","console","log","catch","setInterval","clearInterval","addEventListener"],"mappings":";AAAA,MAAMA,EAAeC,SAASC,cAAc,uBACtCC,EAAcF,SAASC,cAAc,sBACrCE,EAAgBH,SAASC,cAAc,wBACvCG,EAAQJ,SAASC,cAAc,UAC/BI,EAASL,SAASC,cAAc,SACtC,IAAIK,EAAa,KACjB,SAASC,EAAcC,EAAUC,GACtB,OAAA,IAAIC,QAAQ,CAACC,EAASC,KACHC,KAAKC,SAAW,IAEpCH,EAAQ,CAACH,SAAAA,EAAUC,MAAAA,IAEnBG,EAAO,CAACJ,SAAAA,EAAUC,MAAAA,MAG5B,MAAMM,EAAeC,IACnBA,EAAMC,iBACAC,MAAAA,EAAUC,OAAOpB,EAAaqB,OAC9BC,EAASF,OAAOjB,EAAYkB,OAC5BE,EAASH,OAAOhB,EAAciB,OAChCG,IAAAA,EAAgB,EACpBC,WAAW,KACTjB,EAAe,EAAGW,GACfO,KAAK,EAAGjB,SAAAA,EAAUC,MAAAA,MACjBiB,QAAQC,2BAA2BnB,QAAeC,SAEnDmB,MAAM,EAAGpB,SAAAA,EAAUC,MAAAA,MAClBiB,QAAQC,0BAA0BnB,QAAeC,UAErDS,GACFM,WAAW,KACTlB,EAAauB,YAAY,OACvBN,GACoBD,GAClBQ,cAAcxB,GAEhBC,EAAegB,EAAeF,GAC7BI,KAAK,EAAGjB,SAAAA,EAAUC,MAAAA,MACjBiB,QAAQC,2BAA2BnB,QAAeC,SAEnDmB,MAAM,EAAGpB,SAAAA,EAAUC,MAAAA,MAClBiB,QAAQC,0BAA0BnB,QAAeC,UAElDY,IACFH,IAELb,EAAO0B,iBAAiB,SAAUhB","file":"03-promises.a3f03508.js","sourceRoot":"../src","sourcesContent":["const inputDelayEl = document.querySelector(\"input[name='delay']\");\nconst inputStepEl = document.querySelector(\"input[name='step']\");\nconst inputAmountEl = document.querySelector(\"input[name='amount']\");\nconst btnEl = document.querySelector('button');\nconst formEl = document.querySelector('.form');\nlet intervalId = null;\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {     \n        const shouldResolve = Math.random() > 0.3;      \n        if (shouldResolve) {\n          resolve({position, delay})\n        } \n          reject({position, delay})      \n})     \n}\nconst sendPromise = (event) => {\n  event.preventDefault();\n  const delayEl = Number(inputDelayEl.value);\n  const stepEl = Number(inputStepEl.value);\n  const amount = Number(inputAmountEl.value);\n  let positionIndex = 1;\n  setTimeout(() => {\n    createPromise( 1 ,delayEl)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  },delayEl)\n  setTimeout(() => {\n    intervalId = setInterval(() => {\n      positionIndex ++;\n      if(positionIndex == amount){\n        clearInterval(intervalId);\n      }\n      createPromise( positionIndex ,stepEl)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    }, stepEl) \n  }, delayEl) \n}\nformEl.addEventListener('submit', sendPromise);\n\n\n"]}